{"version":3,"sources":["component/sources/index.js","component/deploy/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["BarColumns","props","source","data","title","chartType","width","height","loader","options","GroupBar","subtitle","console","log","chart","rootProps","Pie","hole","beginAngle","legend","tooltip","pieHole","pieStartAngle","trigger","Static","type","useState","graph","setGraph","useEffect","App","className","Dashboard","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79f90b4b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nexport function BarColumns(props) {\r\n  const { data, title } = props.source;\r\n\r\n  return (\r\n    <>\r\n      <Chart\r\n        chartType=\"ColumnChart\"\r\n        width=\"100%\"\r\n        height=\"400px\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={data}\r\n        options={{\r\n          title: title,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport function GroupBar(props) {\r\n  const { data, title, options } = props.source;\r\n  const { width, height, subtitle } = options\r\n    ? options\r\n    : {\r\n        width: \"100%\",\r\n        height: \"400px\",\r\n        subtitle: \"\",\r\n      };\r\n  console.log(data);\r\n  return (\r\n    <>\r\n      <Chart\r\n        width={width}\r\n        height={height}\r\n        chartType=\"Bar\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={data}\r\n        options={{\r\n          chart: {\r\n            title: title,\r\n            subtitle: subtitle,\r\n          },\r\n        }}\r\n        rootProps={{ \"data-testid\": \"2\" }}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport function Pie(props) {\r\n  const { data, title, options } = props.source;\r\n  const { width, height, hole, beginAngle, legend, tooltip } = options\r\n    ? options\r\n    : {\r\n        width: \"100%\",\r\n        height: \"400px\",\r\n        hole: 0, //value between 0 y 1, create hole donut graph\r\n        beginAngle: 0, //rotate graph\r\n        legend: \"\", //legend=none, not show legend\r\n        tooltip: \"\", //tooltip=none, not show tooltip\r\n      };\r\n  console.log(title);\r\n  return (\r\n    <>\r\n      <Chart\r\n        width={width}\r\n        height={height}\r\n        chartType=\"PieChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={data}\r\n        options={{\r\n          title: title,\r\n          pieHole: hole,\r\n          pieStartAngle: beginAngle,\r\n          legend: legend,\r\n          tooltip: { trigger: tooltip },\r\n        }}\r\n        rootProps={{ \"data-testid\": \"1\" }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BarColumns, Pie, GroupBar } from \"../sources/\";\r\n\r\nconst Static = (props) => {\r\n  const type = props.type;\r\n  const { data, title } = props.data;\r\n  const [graph, setGraph] = useState({ type: \"\", data: \"\", title: \"\" });\r\n\r\n  useEffect(() => {\r\n    //bar graph\r\n    setGraph({ type: type, data: data, title: title });\r\n  }, [type, data, title]);\r\n\r\n  return (\r\n    <>\r\n      {graph.type == \"simpleBar\" && <BarColumns source={graph} />}\r\n      {graph.type == \"pie\" && <Pie source={graph} />}\r\n      {graph.type == \"groupBar\" && <GroupBar source={graph} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Static;\r\n","import Dashboard from \"./component/deploy/Dashboard\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/dash.css\";\n\nfunction App() {\n  const dataSimpleBar = [\n    [\"ATTENDANCE\", \"COUNTING\", { role: \"style\" }],\n    [\"Woman\", 150, \"#b87333\"], // RGB value\n    [\"Men\", 90, \"silver\"], // English color name\n    [\"Children\", 215, \"gold\"],\n    [\"Seniors\", 60, \"color: #e5e4e2\"], // CSS-style declaration\n  ];\n  const dataGroupBar = [\n    [\"YEAR\", \"GATS\", \"DOGS\", \"PARROTS\"],\n    [\"2014\", 1000, 400, 200],\n    [\"2015\", 1170, 460, 250],\n    [\"2016\", 660, 1120, 300],\n    [\"2017\", 1030, 540, 350],\n  ];\n\n  const dataPie = [\n    [\"WORKOUTS DAYS\", \"TIME\"],\n    [\"Monday\", 1.5],\n    [\"Wednesday\", 1.2],\n    [\"Thursday\", 1],\n    [\"Friday\", 1.3],\n    [\"Saturday\", 2],\n  ];\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <h1>DashBoard</h1>\n          </div>\n        </div>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12 col-sm-12 col-md-6\">\n            <Dashboard\n              type={\"simpleBar\"}\n              data={{ data: dataSimpleBar, title: \"EVENT ATTENDANCE\" }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-12 col-md-6\">\n            <Dashboard\n              type={\"pie\"}\n              data={{ data: dataPie, title: \"WORKOUTS OF THE WEEK\" }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-12 col-md-6\">\n            <Dashboard\n              type={\"groupBar\"}\n              data={{ data: dataGroupBar, title: \"ADOPTIONS\" }}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}